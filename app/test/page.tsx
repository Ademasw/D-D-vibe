"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"

export default function TestPage() {
  const [testResult, setTestResult] = useState<string>("")
  const [loading, setLoading] = useState(false)
  const [customPrompt, setCustomPrompt] = useState("–Ø –æ—Å–º–∞—Ç—Ä–∏–≤–∞—é –∫–æ–º–Ω–∞—Ç—É –≤ –ø–æ–∏—Å–∫–∞—Ö —Å–æ–∫—Ä–æ–≤–∏—â")

  const testDeepSeekR1 = async () => {
    setLoading(true)
    setTestResult("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DeepSeek R1...")

    try {
      const response = await fetch("/api/action", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          sessionId: "test-session-" + Date.now(),
          actionText: customPrompt,
        }),
      })

      const data = await response.json()

      if (response.ok) {
        setTestResult(`‚úÖ DeepSeek R1 —Ä–∞–±–æ—Ç–∞–µ—Ç!

üé≤ –ë—Ä–æ—Å–æ–∫ d20: ${data.roll}

üßô –û—Ç–≤–µ—Ç DM:
${data.result}

üìä –°—Ç–∞—Ç—É—Å: ${data.result.includes("‚ö†Ô∏è") ? "–†–µ–∑–µ—Ä–≤–Ω—ã–π —Ä–µ–∂–∏–º (API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)" : "DeepSeek R1 –∞–∫—Ç–∏–≤–µ–Ω"}

‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${new Date().toLocaleTimeString()}`)
      } else {
        setTestResult(`‚ùå –û—à–∏–±–∫–∞ API:
${data.error}

–î–µ—Ç–∞–ª–∏: ${data.details || "–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"}`)
      }
    } catch (error) {
      setTestResult(`‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:
${error}

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–∞.`)
    } finally {
      setLoading(false)
    }
  }

  const testDirectAPI = async () => {
    setLoading(true)
    setTestResult("–ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DeepSeek R1 API...")

    try {
      const testResponse = await fetch("/api/test-deepseek", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          prompt: "–¢–µ—Å—Ç DeepSeek R1: —Å–æ–∑–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞–≤–µ—Ä–Ω—ã –¥–ª—è D&D –∏–≥—Ä—ã",
        }),
      })

      const data = await testResponse.json()

      if (testResponse.ok) {
        setTestResult(`‚úÖ –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç DeepSeek R1:

–ú–æ–¥–µ–ª—å: deepseek-r1-0528
API –∫–ª—é—á: ${data.apiKeyPrefix || "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"}

–û—Ç–≤–µ—Ç:
${data.response || "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞"}

–°—Ç–∞—Ç—É—Å: ${data.success ? "–£—Å–ø–µ—à–Ω–æ" : "–û—à–∏–±–∫–∞"}`)
      } else {
        setTestResult(`‚ùå –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è:
${data.error}

${data.details || ""}`)
      }
    } catch (error) {
      setTestResult(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∞: ${error}`)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 p-4">
      <div className="max-w-2xl mx-auto">
        <Card className="bg-slate-800 border-slate-700 text-white">
          <CardHeader>
            <CardTitle>üß™ –¢–µ—Å—Ç DeepSeek R1 (deepseek-r1-0528)</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <Label htmlFor="prompt" className="text-slate-200">
                –¢–µ—Å—Ç–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–≥—Ä–æ–∫–∞:
              </Label>
              <Input
                id="prompt"
                value={customPrompt}
                onChange={(e) => setCustomPrompt(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
                className="bg-slate-700 border-slate-600 text-white placeholder-slate-400"
              />
            </div>

            <div className="grid grid-cols-1 gap-2">
              <Button onClick={testDeepSeekR1} disabled={loading} className="bg-blue-600 hover:bg-blue-700">
                {loading ? "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..." : "üé≤ –¢–µ—Å—Ç –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"}
              </Button>

              <Button onClick={testDirectAPI} disabled={loading} className="bg-green-600 hover:bg-green-700">
                {loading ? "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..." : "üîß –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API"}
              </Button>
            </div>

            {testResult && (
              <div className="bg-slate-700 p-4 rounded-lg">
                <pre className="whitespace-pre-wrap text-sm">{testResult}</pre>
              </div>
            )}

            <div className="mt-4 p-3 bg-slate-700 rounded-lg text-sm">
              <p className="text-slate-300 font-semibold mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ DeepSeek R1:</p>
              <ul className="list-disc list-inside space-y-1 text-slate-400">
                <li>–ú–æ–¥–µ–ª—å: deepseek-r1-0528</li>
                <li>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –∏ –ª–æ–≥–∏–∫–∞</li>
                <li>–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á</li>
                <li>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞</li>
                <li>–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤: 300</li>
              </ul>
            </div>

            <Button
              onClick={() => (window.location.href = "/")}
              variant="outline"
              className="w-full border-slate-600 text-slate-300 hover:bg-slate-700"
            >
              üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏–≥—Ä–µ
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
